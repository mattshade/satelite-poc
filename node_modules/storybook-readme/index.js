'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.doc = exports.withDocs = exports.withReadme = undefined;

var _isPlainObject = require('lodash/isPlainObject');

var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

var _isString = require('lodash/isString');

var _isString2 = _interopRequireDefault(_isString);

var _isArray = require('lodash/isArray');

var _isArray2 = _interopRequireDefault(_isArray);

var _vue = require('./env/vue');

var _vue2 = _interopRequireDefault(_vue);

var _react = require('./env/react');

var _react2 = _interopRequireDefault(_react);

var _normalizeDocs = require('./services/normalizeDocs');

var _normalizeDocs2 = _interopRequireDefault(_normalizeDocs);

require('./styles/github-markdown-css');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var handler = null;

switch (window.STORYBOOK_ENV) {
  case 'vue':
    handler = _vue2.default;
    break;
  case 'react':
    handler = _react2.default;
    break;
  default:
    handler = _react2.default;
}

var WITH_README = 'WITH_README';
var WITH_DOCS = 'WITH_DOCS';
var DOC = 'DOC';

var DEFAULT_CONFIG = {
  FooterComponent: null,
  PreviewComponent: null,
  docsAtFooter: null
};

var WITH_DOCS_COMMON_CONFIG = {};
var WITH_README_COMMON_CONFIG = {};

function getCommonConfig(type) {
  switch (type) {
    case WITH_README:
      return WITH_README_COMMON_CONFIG;

    case WITH_DOCS:
      return WITH_DOCS_COMMON_CONFIG;

    default:
      throw new Error('wrong type');
  }
}

function withCallType(_ref) {
  var type = _ref.type,
      config = _ref.config;

  if (type === DOC) {
    return function () {
      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return handler.doc({
        docs: args,
        config: config
      });
    };
  }

  var typeHandler = null;

  switch (type) {
    case WITH_README:
      typeHandler = handler.withReadme;
      break;
    case WITH_DOCS:
      typeHandler = handler.withDocs;
      break;
    default:
      throw new Error('wrong type');
  }

  return function () {
    switch (true) {
      /**
       * withDocs({
       *  preview: props => {}
       *  footer: props => {}
       * })(README)
       */
      case arguments.length === 1 && (0, _isPlainObject2.default)(arguments.length <= 0 ? undefined : arguments[0]):
        return withCallType({
          type: type,
          config: Object.assign({}, config, arguments.length <= 0 ? undefined : arguments[0])
        });

      /**
       * .addDecorator(
       *  withDocs(README)
       * )
       *
       * .addDecorator(
       *  withDocs([README1, README2])
       * )
       */
      case arguments.length === 1 && ((0, _isString2.default)(arguments.length <= 0 ? undefined : arguments[0]) || (0, _isArray2.default)(arguments.length <= 0 ? undefined : arguments[0])):
        return typeHandler.callAsDecorator({
          docs: (0, _normalizeDocs2.default)(arguments.length <= 0 ? undefined : arguments[0]),
          storyFn: null,
          config: Object.assign({}, config, getCommonConfig(type))
        });

      /**
       * withDocs(README, storyFn)
       * withDocs([README1, README2], storyFn)
       */
      case arguments.length === 2:
        return typeHandler.callAsHoc({
          docs: (0, _normalizeDocs2.default)(arguments.length <= 0 ? undefined : arguments[0]),
          storyFn: arguments.length <= 1 ? undefined : arguments[1],
          config: Object.assign({}, config, getCommonConfig(type))
        });

      default:
        throw new Error('wrong arguments');
    }
  };
}

var withReadme = exports.withReadme = function withReadme() {
  return withCallType({ type: WITH_README, config: DEFAULT_CONFIG }).apply(undefined, arguments);
};

var withDocs = exports.withDocs = function withDocs() {
  return withCallType({ type: WITH_DOCS, config: DEFAULT_CONFIG }).apply(undefined, arguments);
};

var doc = exports.doc = function doc() {
  return withCallType({
    type: DOC,
    config: DEFAULT_CONFIG
  }).apply(undefined, arguments);
};

withDocs.addFooterDocs = function (docsAtFooter) {
  WITH_DOCS_COMMON_CONFIG.docsAtFooter = docsAtFooter;
};

withReadme.addFooterDocs = function (docsAtFooter) {
  WITH_README_COMMON_CONFIG.docsAtFooter = docsAtFooter;
};